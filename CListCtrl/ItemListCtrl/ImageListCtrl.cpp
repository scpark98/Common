// SmsListCtrl.cpp : implementation file
//

#include "stdafx.h"
#include "ImageListCtrl.h"

#include "ImageItem.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

//---------------------------------------------------------------------------
// Item들의 Scroll을 처리하기 위한 값들을 정의한다.
//---------------------------------------------------------------------------
#define ITEM_V_GAP			10
#define ITEM_H_GAP			10

#define ITEM_TEXT			20			    //아이템 아래에 출력될 글의 높이

#define ITEM_WIDTH       	100				//아이템 가로범위 100
#define ITEM_HEIGHT      	100+ITEM_TEXT	//아이템 세로범위 100

#define H_GAP 				20				//컨트롤과 아이템의 왼쪽 간격
#define V_GAP 				20				//컨트롤과 아이템의 위쪽 간격
//---------------------------------------------------------------------------
/////////////////////////////////////////////////////////////////////////////
// CImageListCtrl
CImageListCtrl::CImageListCtrl()
{
}

CImageListCtrl::~CImageListCtrl()
{
}


BEGIN_MESSAGE_MAP(CImageListCtrl, CItemListCtrl)
	//{{AFX_MSG_MAP(CImageListCtrl)
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CImageListCtrl message handler
//---------------------------------------------------------------------------
// 함수설명 : 지정된 패스에 있는 이미지들을 읽어들인다.
//---------------------------------------------------------------------------
// 변수명   : strPath : 이미지 경로명을 나타냄.
//---------------------------------------------------------------------------
bool CImageListCtrl::LoadPath(CString strPath)
{
	//-----------------------------------------------------------------------
	// 데이타가 이미 존재한다면 이를 삭제해야 한다.
	//-----------------------------------------------------------------------
	InitItemList();

	//-----------------------------------------------------------------------
	// 지정된 폴더안에 포함되어 있는 파일들 명을 얻어온다.
	//-----------------------------------------------------------------------
	CFileFind findFile;

	BOOL bFinded = findFile.FindFile( strPath + "\\*.*" );

	while( bFinded == TRUE )
	{
		bFinded = findFile.FindNextFile();
				
		CString strFind = findFile.GetFileName();

		if( findFile.IsDirectory() != TRUE )
		{
			//--------------------------------------------------------------
			// 이미지들을 관리하는 이미지 아이템을 생성한다.
			//--------------------------------------------------------------
			AddTail( new CImageItem( findFile.GetFilePath() ));
		}
	}

	findFile.Close();

	//-----------------------------------------------------------------------
	// 스크롤크기를 재조정하고 리스트컨트롤을 다시 그린다.
	//-----------------------------------------------------------------------	
	ReDraw();

	return true;
}

//---------------------------------------------------------------------------
// 함수설명 : 아이템의 폭을 반환한다.
//---------------------------------------------------------------------------
int CImageListCtrl::GetItemWidth()
{
	return ITEM_WIDTH;
}

//---------------------------------------------------------------------------
// 함수설명 : 아이템의 높이를 반환한다.
//---------------------------------------------------------------------------	
int CImageListCtrl::GetItemHeight()
{
	return ITEM_HEIGHT;
}

//---------------------------------------------------------------------------
// 함수설명 : 수직방향에서 아이템과 아이템 사이의 간격
//---------------------------------------------------------------------------
int CImageListCtrl::GetItemVGap()
{
	return ITEM_V_GAP;
}
	
//---------------------------------------------------------------------------
// 함수설명 : 수평방향에서 아이템과 아이템 사이의 간격
//---------------------------------------------------------------------------
int CImageListCtrl::GetItemHGap()
{
	return ITEM_H_GAP;
}

//---------------------------------------------------------------------------
// 함수설명 : 수직방향에서 리스트컨트롤과 아이템 사이의 간격
//---------------------------------------------------------------------------	
int CImageListCtrl::GetVGap()
{
	return V_GAP;
}

//---------------------------------------------------------------------------
// 함수설명 : 수평방향에서 리스트컨트롤과 아이템 사이의 간격
//---------------------------------------------------------------------------		
int CImageListCtrl::GetHGap()
{
	return H_GAP;
}
